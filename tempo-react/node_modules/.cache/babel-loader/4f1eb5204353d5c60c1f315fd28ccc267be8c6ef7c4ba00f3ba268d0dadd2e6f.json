{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jvfve\\\\OneDrive\\\\Documentos\\\\react-tempo\\\\tempo-react\\\\src\\\\App.js\";\n// import { useState } from \"react\";\n\n// function App() {\n//   const [city, setCity] = useState(\"\")\n//   const [weatherForcast, setweatherForcast] = useState(null)\n\n//   const handleChange = (e) => {\n//     setCity(e.target.value)\n//   }\n\n//   const handleSearch = (e) => {\n//     fetch(`https://api.weatherapi.com/v1/current.json?key=db8f580a6f4a489daf7121938231006&q=${city}&lang=pt`)\n//       .then((response) => {\n//         if (response.status === 200) {\n//           return response.json()\n//         }\n//       })\n//       .then((data)=>{\n//         console.log(data)\n//         setweatherForcast(data)\n//         })\n// };\n// const getWeatherIcon = () => {\n//   if (!weatherForcast) return null;\n\n//   const conditionCode = weatherForcast.current.condition.text;\n\n//   if (conditionCode === \"Sol\") {\n//     // Clear\n//     return (<img src=\"nublado.jpg\" alt=\"\"/>)\n//   } else if (conditionCode === \"Parcialmente nublado\" || conditionCode === \"Nublado\") {\n//     // Partly cloudy\n//     return <img src=\"\" alt=\"\"></img>;\n//   } else if (conditionCode === 1063 || conditionCode === 1150) {\n//     // Patchy rain possible\n//     return '/nublado.jpg';\n//   } else {\n//     return \"default.jpg\";\n//   }\n// };\n\n// return (\n//   <div>\n//     <nav className=\"navbar navbar-expand-md navbar-dark bg-dark mb-4\">\n//       <a className=\"navbar-brand text-white\" href=\"#top\">\n//         Previsão do tempo\n//       </a>\n//     </nav>\n\n//     <main className=\"container\">\n//       <div className='bg-light -5'>\n//         <h1>\n//           <p>Verifique a previsão do tempo em sua cidade</p>\n//         </h1>\n//         <p className=\"lead\">\n//           Digite o nome da sua cidade no campo abaixo\n\n//         </p>\n//         <div className=\"row mb-4\">\n//           <div className=\"col-md-6\">\n//             <input\n//               onChange={handleChange}\n//               className=\"form-control\" value={city} />\n//           </div>\n//         </div>\n//         <button\n//           onClick={handleSearch}\n//           className=\"btn btn-primary btn-lg\">\n//           Pesquisar\n\n//         </button>\n\n//         {weatherForcast ? (\n//           <div>\n//           <div className=\"mt-4 d-flex align-items-center\">\n//             <div>\n//               <img src={weatherForcast.current.condition.icon}  alt=\"icon\" />\n\n//             </div>\n//             <div>\n//               <img src={getWeatherIcon()} alt=\"WeatherIcon\"></img>\n//               </div>\n//             <div>\n//             <h3>Atualmente em <span>{city}</span> o dia está: {weatherForcast.current.condition.text}</h3>\n//             <p className=\"loading\"> Temp: {weatherForcast.current.temp_c}º</p>\n//             <p className=\"lead\"> Umidade: {weatherForcast.current.humidity}</p>\n//             <p className=\"lead\"> País: {weatherForcast.location.country}</p>\n//             <p></p>\n//             </div>\n\n//           </div>\n//         </div>\n//         ) :null } \n//       </div>\n//     </main>\n//   </div>\n// );\n// }\n\n// export default App;\n\n// Codigo Chatgpt\nimport React from \"react\";\nimport WeatherApp from \"./WeatherApp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar navbar-expand-md navbar-dark bg-dark mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"navbar-brand text-white\",\n        href: \"#top\",\n        children: \"Previs\\xE3o do tempo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(WeatherApp, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","WeatherApp","jsxDEV","_jsxDEV","App","children","className","href","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jvfve/OneDrive/Documentos/react-tempo/tempo-react/src/App.js"],"sourcesContent":["// import { useState } from \"react\";\n\n\n// function App() {\n//   const [city, setCity] = useState(\"\")\n//   const [weatherForcast, setweatherForcast] = useState(null)\n\n\n//   const handleChange = (e) => {\n//     setCity(e.target.value)\n//   }\n\n\n//   const handleSearch = (e) => {\n//     fetch(`https://api.weatherapi.com/v1/current.json?key=db8f580a6f4a489daf7121938231006&q=${city}&lang=pt`)\n//       .then((response) => {\n//         if (response.status === 200) {\n//           return response.json()\n//         }\n//       })\n//       .then((data)=>{\n//         console.log(data)\n//         setweatherForcast(data)\n//         })\n// };\n// const getWeatherIcon = () => {\n//   if (!weatherForcast) return null;\n\n//   const conditionCode = weatherForcast.current.condition.text;\n\n//   if (conditionCode === \"Sol\") {\n//     // Clear\n//     return (<img src=\"nublado.jpg\" alt=\"\"/>)\n//   } else if (conditionCode === \"Parcialmente nublado\" || conditionCode === \"Nublado\") {\n//     // Partly cloudy\n//     return <img src=\"\" alt=\"\"></img>;\n//   } else if (conditionCode === 1063 || conditionCode === 1150) {\n//     // Patchy rain possible\n//     return '/nublado.jpg';\n//   } else {\n//     return \"default.jpg\";\n//   }\n// };\n\n\n// return (\n//   <div>\n//     <nav className=\"navbar navbar-expand-md navbar-dark bg-dark mb-4\">\n//       <a className=\"navbar-brand text-white\" href=\"#top\">\n//         Previsão do tempo\n//       </a>\n//     </nav>\n\n//     <main className=\"container\">\n//       <div className='bg-light -5'>\n//         <h1>\n//           <p>Verifique a previsão do tempo em sua cidade</p>\n//         </h1>\n//         <p className=\"lead\">\n//           Digite o nome da sua cidade no campo abaixo\n\n//         </p>\n//         <div className=\"row mb-4\">\n//           <div className=\"col-md-6\">\n//             <input\n//               onChange={handleChange}\n//               className=\"form-control\" value={city} />\n//           </div>\n//         </div>\n//         <button\n//           onClick={handleSearch}\n//           className=\"btn btn-primary btn-lg\">\n//           Pesquisar\n        \n//         </button>\n\n//         {weatherForcast ? (\n//           <div>\n//           <div className=\"mt-4 d-flex align-items-center\">\n//             <div>\n//               <img src={weatherForcast.current.condition.icon}  alt=\"icon\" />\n             \n//             </div>\n//             <div>\n//               <img src={getWeatherIcon()} alt=\"WeatherIcon\"></img>\n//               </div>\n//             <div>\n//             <h3>Atualmente em <span>{city}</span> o dia está: {weatherForcast.current.condition.text}</h3>\n//             <p className=\"loading\"> Temp: {weatherForcast.current.temp_c}º</p>\n//             <p className=\"lead\"> Umidade: {weatherForcast.current.humidity}</p>\n//             <p className=\"lead\"> País: {weatherForcast.location.country}</p>\n//             <p></p>\n//             </div>\n            \n//           </div>\n//         </div>\n//         ) :null } \n//       </div>\n//     </main>\n//   </div>\n// );\n// }\n\n// export default App;\n\n\n// Codigo Chatgpt\nimport React from \"react\";\nimport WeatherApp from \"./WeatherApp\";\n\nfunction App() {\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-md navbar-dark bg-dark mb-4\">\n        <a className=\"navbar-brand text-white\" href=\"#top\">\n          Previsão do tempo\n        </a>\n      </nav>\n\n      <main className=\"container\">\n        <WeatherApp />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAGA;AACA;AACA;;AAGA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,GAAGA,CAAA,EAAG;EACb,oBACED,OAAA;IAAAE,QAAA,gBACEF,OAAA;MAAKG,SAAS,EAAC,kDAAkD;MAAAD,QAAA,eAC/DF,OAAA;QAAGG,SAAS,EAAC,yBAAyB;QAACC,IAAI,EAAC,MAAM;QAAAF,QAAA,EAAC;MAEnD;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAENR,OAAA;MAAMG,SAAS,EAAC,WAAW;MAAAD,QAAA,eACzBF,OAAA,CAACF,UAAU;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACC,EAAA,GAdQR,GAAG;AAgBZ,eAAeA,GAAG;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}